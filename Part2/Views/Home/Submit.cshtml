@model Part1.Models.ClaimSubmissionDTO
@{
    ViewData["Title"] = "Submit Claims";
}

<div class="container">
    <div class="lecturer-info">
        @if (User.Identity.IsAuthenticated)
        {
            <h2>Welcome, @Model.LecturerName @Model.LecturerSurname!</h2>
            <p><strong>Phone:</strong> @Model.LecturerPhone</p>
            <p><strong>Email:</strong> @Model.LecturerEmail</p>
        }
        else
        {
            <h2>Welcome, Guest!</h2>
            <p>Please log in to submit your claims.</p>
        }
    </div>

    <div class="submit-box">
        <h1 class="submit-title">Submit Your Claim</h1>

        <form asp-action="Submit" method="post" enctype="multipart/form-data" onsubmit="return validateForm()">
            <div class="form-group">
                <label>Select Module</label>
                @foreach (var module in Model.Modules)
                {
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" name="SelectedModules" value="@module" id="module_@module" onchange="calculateTotal()">
                        <label class="form-check-label" for="module_@module">@module</label>
                    </div>
                }
                <small class="form-text text-muted">You can select multiple modules.</small>
                <span asp-validation-for="SelectedModules" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Claim.HoursWorked">Hours Worked</label>
                <input asp-for="Claim.HoursWorked" type="number" class="form-control" min="1" max="200" required onchange="calculateTotal()">
                <span asp-validation-for="Claim.HoursWorked" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Claim.HourlyRate">Hourly Rate (R)</label>
                <input asp-for="Claim.HourlyRate" type="number" class="form-control" step="0.01" min="50" max="1000" required onchange="calculateTotal()">
                <span asp-validation-for="Claim.HourlyRate" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label for="TotalClaimAmount">Total Claim Amount (R)</label>
                <input type="text" class="form-control" id="TotalClaimAmount" name="TotalClaimAmount" readonly>
            </div>

            <div class="form-group">
                <label asp-for="Claim.AdditionalNotes">Additional Notes</label>
                <textarea asp-for="Claim.AdditionalNotes" class="form-control" rows="3"></textarea>
                <span asp-validation-for="Claim.AdditionalNotes" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label for="SupportingDocuments">Upload Supporting Document</label>
                <input type="file" class="form-control-file" id="SupportingDocuments" name="SupportingDocuments" accept=".pdf, .docx, .xlsx" required>
                <small class="form-text text-muted">Accepted formats: PDF, DOCX, XLSX. Max size: 5MB.</small>
                <div id="fileNameDisplay"></div>
            </div>

            <input type="hidden" name="Lecturer" />
            <input type="hidden" asp-for="LecturerID" />
            <input type="hidden" asp-for="LecturerName" />
            <input type="hidden" asp-for="LecturerSurname" />
            <input type="hidden" asp-for="LecturerPhone" />
            <input type="hidden" asp-for="LecturerEmail" />
            <input type="hidden" name="Claim.Status" value="Pending" />

            <button type="submit" class="btn btn-primary submit-btn">Submit Claim</button>
        </form>

        @if (!ViewData.ModelState.IsValid)
        {
            <div class="alert alert-danger mt-3">
                <strong>Please fix the errors below:</strong>
                @Html.ValidationSummary()
            </div>
        }
    </div>
</div>

<script>
    function calculateTotal() {
        const modules = document.querySelectorAll('input[name="SelectedModules"]:checked');
        const hoursWorked = parseFloat(document.querySelector('input[name="Claim.HoursWorked"]').value) || 0;
        const hourlyRate = parseFloat(document.querySelector('input[name="Claim.HourlyRate"]').value) || 0;

        const moduleCount = modules.length;
        const totalClaimAmount = hoursWorked * hourlyRate * moduleCount;

        document.getElementById('TotalClaimAmount').value = totalClaimAmount.toFixed(2);
    }

    function validateForm() {
        const modules = document.querySelectorAll('input[name="SelectedModules"]:checked');
        if (modules.length === 0) {
            alert("Please select at least one module.");
            return false;
        }
        return true;
    }

    document.getElementById('SupportingDocuments').addEventListener('change', function () {
        const fileInput = this;
        const fileNameDisplay = document.getElementById('fileNameDisplay');
        const file = fileInput.files[0];

        if (file) {
            if (file.size > 5242880) {
                alert("File size exceeds 5MB. Please upload a smaller file.");
                fileInput.value = "";
                fileNameDisplay.innerHTML = "";
            } else {
                fileNameDisplay.innerHTML = "File uploaded: " + file.name;
            }
        }
    });
</script>

<!-- Custom styles for the submission page -->
<style>
    /* General Styles */
    html, body {
        height: 100%;
        margin: 0;
        display: flex;
        flex-direction: column;
        font-family: 'Poppins', sans-serif;
        background-color: #ffe6f2; /* Light pink background */
        color: #880e4f; /* Dark pink text */
    }

    /* Navbar Styles */
    .navbar {
        background-color: #f48fb1; /* Light pink navbar */
        color: #880e4f;
        padding: 15px 30px;
        border-radius: 0 0 10px 10px;
    }

    .navbar-brand {
        color: #880e4f;
        font-size: 24px;
        font-weight: 600;
    }

    .nav-link {
        color: #880e4f;
        font-weight: 500;
        margin-right: 20px;
    }

    .navbar-toggler {
        border-color: #880e4f;
    }

    .profile-circle {
        background-color: #880e4f;
        color: #fff;
        font-size: 16px;
        width: 40px;
        height: 40px;
        border-radius: 50%;
        display: flex;
        justify-content: center;
        align-items: center;
        cursor: pointer;
    }

    .profile-circle:hover {
        background-color: #ad1457;
    }

    /* Content Area */
    .container {
        margin-top: 30px;
        flex: 1;
    }

    .form-control {
        border-color: #d81b60;
    }

    label {
        font-weight: bold;
        color: #880e4f; /* Dark pink label text */
    }

    /* Footer Styles */
    footer {
        background-color: #f8bbd0; /* Light pink footer */
        color: #880e4f;
        padding: 20px;
        text-align: center;
    }

    /* Button Styles */
    .btn-primary {
        background-color: #d81b60; /* Dark pink button */
        border: none;
    }

    .btn-primary:hover {
        background-color: #ad1457; /* Darker pink hover */
    }

    /* Responsive Adjustments */
    @@media (max-width: 768px) {
        .navbar {
            padding: 10px 20px;
        }

        .navbar-brand {
            font-size: 22px;
        }

        .nav-link {
            font-size: 14px;
            margin-right: 10px;
        }

        .profile-circle {
            width: 30px;
            height: 30px;
            font-size: 14px;
        }

        .container {
            padding: 10px;
        }

        .collapse.navbar-collapse {
            justify-content: flex-end;
        }
    }
</style>

